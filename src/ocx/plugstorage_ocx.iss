; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Componente PlugStorage"
#define MyAppVersion "1.0"
#define MyAppPublisher "TecnoSpeed TI"
#define MyAppURL "http://www.tecnospeed.com.br"
#define MyAppExeName "MyProg.exe"
#define OCXPlugStorage "C:\tecnospeed"


[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{EA01EFA5-BF97-492F-8FDF-9DE1E9E7EC8B}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
; AllowNoIcons=true
; SetupIconFile={#NFe}\build\files\images\NFe.ico
; UninstallDisplayIcon={app}\NFe.ico
CreateAppDir=no
SignedUninstaller=false
VersionInfoVersion={#MyAppVersion}
ArchitecturesInstallIn64BitMode=x64
ChangesEnvironment=no
UninstallFilesDir={pf}\TecnoSpeed\{#MyAppName}
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=setup_spdplugstorage
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Components]
Name: ProgramFiles; Description: Arquivos do sistema; Types: full compact custom; Flags: fixed
Name: OCX; Description: DLLs ActiveX; Types: full compact custom

[Files]
;Source: {#OCXPlugStorage}\build\files\images\PlugStorage.ico; DestDir: {app}; flags: ignoreversion
Source: {#OCXPlugStorage}\OCX-PlugStorage\src\ocx\spdPlugStorageX32.ocx; DestDir: {sys}; Components: OCX; Flags: regserver 32bit overwritereadonly ignoreversion; Check: Not IsWin64
Source: {#OCXPlugStorage}\OCX-PlugStorage\src\ocx\spdPlugStorageX64.ocx; DestDir: {sys}; Components: OCX; Flags: regserver 64bit overwritereadonly ignoreversion; Check: IsWin64
Source: {#OCXPlugStorage}\OCX-PlugStorage\src\ocx\spdPlugStorageX32.ocx; DestDir: {syswow64}; Components: OCX; Flags: regserver 32bit overwritereadonly ignoreversion; Check: IsWin64

[Run]
Filename: {sys}\regsvr32.exe; Parameters: spdPlugStorageX32.ocx /s; Flags: shellexec waituntilidle; Check: Not IsWin64
Filename: {sys}\regsvr32.exe; Parameters: spdPlugStorageX64.ocx /s; Flags: shellexec waituntilidle; Check: IsWin64
Filename: {syswow64}\regsvr32.exe; Parameters: spdPlugStorageX32.ocx /s; Flags: shellexec waituntilidle; Check: IsWin64

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: brazilianportuguese; MessagesFile: compiler:Languages\BrazilianPortuguese.isl

[UninstallRun]
Filename: {sys}\regsvr32.exe; Parameters: spdPlugStorageX32.ocx /u; Flags: shellexec waituntilidle; Check: Not IsWin64
Filename: {sys}\regsvr32.exe; Parameters: spdPlugStorageX64.ocx /u; Flags: shellexec waituntilidle; Check: IsWin64
Filename: {syswow64}\regsvr32.exe; Parameters: spdPlugStorageX32.ocx /u; Flags: shellexec waituntilidle; Check: IsWin64

[UninstallDelete]
Name: {sys}\spdPlugStorageX32.ocx; Type: files; Check: Not IsWin64    
Name: {sys}\spdPlugStorageX64.ocx; Type: files; Check: IsWin64
Name: {syswow64}\spdPlugStorageX32.ocx; Type: files; Check: IsWin64

[Code]
function PathToMD5(Path: String): String;
begin
  Result := GetMD5OfString(Path);
end;

function GetSysPath(Param: String): String;
begin
  if Is64BitInstallMode then
    Result := ExpandConstant('{syswow64}') + '\'
  else
  begin
  	if Trim(Param) = '' then
      Result := ''
	  else if Pos('{', Param) > 0 then
	    Result := ExpandConstant('{' + Param + '}')
	  else
	    Result := Param;
  end;
end;
